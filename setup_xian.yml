---
- name: Setup Xian ABCI application on Ubuntu 22.04
  hosts: nodes
  become: yes
  vars:
    python_version: "3.11"
    xian_repo: "https://github.com/xian-network/xian-core.git"
    contracting_repo: "https://github.com/xian-network/contracting.git"
    cometbft_version: "0.38.6"
    cometbft_url: "https://github.com/cometbft/cometbft/releases/download/v{{ cometbft_version }}/cometbft_{{ cometbft_version }}_linux_amd64.tar.gz"
    validator_privkey: "{{sk}}"
    moniker: "{{inventory_hostname}}"
    genesis_file_name: "genesis-testnet.json"
    # Add the seed node IP if joining an existing network
    seed_node_address: "{{false if inventory_hostname == 'testnet_1' else '614EBE42CBE8354F733851F4316D0DE316B1AEF0@testnet1.xian.org'}}"
    # Decide if you're starting a new network or joining an existing one
    starting_new_network: "{{ true if inventory_hostname == 'testnet_1' else false }}"  # Set to false if joining an existing network

  tasks:
    - name: Update and add required PPA
      apt:
        name: software-properties-common
        state: present
      notify: Add deadsnakes PPA

    - name: Install necessary packages
      apt:
        name:
          - "pkg-config"
          - "python{{ python_version }}"
          - "python{{ python_version }}-dev"
          - "python{{ python_version }}-venv"
          - "libhdf5-dev"
          - "build-essential"
        update_cache: yes

    - name: Clone Xian and contracting repositories
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        version: "{{ item.version | default('HEAD') }}"
        clone: yes
        update: yes
        force: yes
      loop:
        - { repo: "{{ xian_repo }}", dest: "/root/xian-core", version: "testnet-ansible-genesis" }
        - { repo: "{{ contracting_repo }}", dest: "/root/xian-core/contracting" }

    - name: Set up Python virtual environment and dependencies
      block:
        - name: Create Python virtual environment
          ansible.builtin.command:
            cmd: "python{{ python_version }} -m venv /root/xian-core/xian_venv"
          args:
            creates: "/root/xian-core/xian_venv"

    - name: Install Python packages for 'contracting'
      ansible.builtin.command:
        cmd: "/root/xian-core/xian_venv/bin/pip install -e /root/xian-core/contracting"
      args:
        chdir: "/root/xian-core/contracting"

    - name: Install Python packages for 'xian-core'
      ansible.builtin.command:
        cmd: "/root/xian-core/xian_venv/bin/pip install -e /root/xian-core/"
      args:
        chdir: "/root/xian-core/"

    - name: Download and setup CometBFT
      block:
        - name: Download CometBFT
          get_url:
            url: "{{ cometbft_url }}"
            dest: "/tmp/cometbft_{{ cometbft_version }}_linux_amd64.tar.gz"

        - name: Extract CometBFT
          ansible.builtin.unarchive:
            src: "/tmp/cometbft_{{ cometbft_version }}_linux_amd64.tar.gz"
            dest: "/root/xian-core/"
            remote_src: yes
            creates: "/root/xian-core/cometbft"

        - name: Initialize CometBFT
          ansible.builtin.command:
            cmd: "./cometbft init"
            chdir: "/root/xian-core/"


    - name: Configure your node
      ansible.builtin.command:
        chdir: /root/xian-core/
        cmd: >
          {{ 'xian_venv/bin/python src/xian/tools/configure.py' }}
          --moniker "{{ moniker }}"
          --copy-genesis {{ starting_new_network | ternary('True', 'False') }}
          --genesis-file-name {{ genesis_file_name }}
          --validator-privkey {{sk}}
          --seed-node-address {{seed_node_address}}
      when: starting_new_network or seed_node_address

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: yes

    - name: Install npm
      apt:
        name: npm
        state: present

    - name: Install PM2 globally using npm
      ansible.builtin.command:
        cmd: npm install pm2@latest -g

    # - name: Create CometBFT systemd service file
    #   become: yes
    #   copy:
    #     dest: "/etc/systemd/system/cometbft.service"
    #     content: |
    #       [Unit]
    #       Description=CometBFT Service
    #       After=network.target

    #       [Service]
    #       User=root
    #       WorkingDirectory=/root/xian-core/
    #       ExecStart=/root/xian-core/cometbft node --rpc.laddr tcp://0.0.0.0:26657
    #       Restart=always

    #       [Install]
    #       WantedBy=multi-user.target
    #   notify: Reload systemd

    # - name: Create Xian ABCI systemd service file
    #   become: yes
    #   copy:
    #     dest: "/etc/systemd/system/xian.service"
    #     content: |
    #       [Unit]
    #       Description=Xian ABCI Application
    #       After=network.target

    #       [Service]
    #       User=root
    #       WorkingDirectory=/root/xian-core/
    #       ExecStart=/bin/bash -c 'source /root/xian-core/xian_venv/bin/activate && python src/xian/xian_abci.py'
    #       Restart=always

    #       [Install]
    #       WantedBy=multi-user.target
    #   notify: Reload systemd

    - name: Install UFW
      apt:
        name: ufw
        state: present

    - name: Allow CometBFT REST API port
      ufw:
        rule: allow
        port: 26657
        proto: tcp

    - name: Allow CometBFT Node Communication port
      ufw:
        rule: allow
        port: 26656
        proto: tcp

    - name: Allow CometBFT Prometheus Metrics port
      ufw:
        rule: allow
        port: 26660
        proto: tcp

    - name: Enable UFW
      ufw:
        state: enabled
        policy: allow
        direction: incoming

  handlers:
    - name: Add deadsnakes PPA
      apt_repository:
        repo: "ppa:deadsnakes/ppa"
        state: present
        update_cache: yes

    - name: Reload systemd
      systemd:
        daemon_reload: yes
